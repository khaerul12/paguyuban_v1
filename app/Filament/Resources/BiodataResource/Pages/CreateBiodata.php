<?php

namespace App\Filament\Resources\BiodataResource\Pages;

use App\Filament\Resources\BiodataResource;
use App\Models\Address;
use App\Models\Biodata;
use App\Models\City;
use App\Models\Province;
use Filament\Actions\Action;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Database\Eloquent\Model;

class CreateBiodata extends CreateRecord
{
    protected static string $resource = BiodataResource::class;
    // protected static ?string $title = "sdad";

    protected ?string $heading = "Daftar Kepala Keluarga";

    // protected ?string $subheading = "Pastikan anda mengisi kepala keluarga sebelum menlanjutkan mengisi anggota keluarga";

    public $newData;
    protected function getCreateFormAction(): Action
    {
        return parent::getCreateFormAction()
            ->color('success')
            ->label('Simpan')
            ->icon('heroicon-o-check'); // TODO: Change the autogenerated stub
    }


    protected function handleRecordCreation(array $data): Model
    {
        $this->newData = $data;
        return parent::handleRecordCreation($data); // TODO: Change the autogenerated stub
    }

    protected function afterCreate(): void
    {
        $data = $this->newData;

        $bio = Biodata::where('full_name', $data['full_name'])
            ->where('birth_date', $data['birth_date'])->get();

        $address = Address::where('biodata_id', $bio[0]['id'])->get();

        $city = City::find($address[0]['city_id']);
        $city->count = $city->count  + 1;
        $city->update();

        $prov = Province::find($address[0]['province_id']);
        $prov->count = $prov->count  + 1;
        $prov->update();
        //        dd($prov->count);
    }


    protected function getCancelFormAction(): Action
    {
        return parent::getCancelFormAction()
            ->label('Kembali'); // TODO: Change the autogenerated stub
    }

    protected function getCreateAnotherFormAction(): Action
    {
        return parent::getCreateAnotherFormAction()->hidden(); // TODO: Change the autogenerated stub
    }

    protected function getRedirectUrl(): string
    {
        return $this->getResource()::getUrl('index');
    }
}
